name: Spring CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

      #Performing SonarQube Analysis using SonarQube Action 
    - name: Analyze with SonarQube

      uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
      env:
          SONAR_TOKEN: ${{ secrets.Sonar_Token }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
          SONAR_HOST_URL: ${{ secrets.Sonar_Host }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)

   # Performing Snyk scan for vulnerabilities
    - uses: actions/checkout@master
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/maven@master
      continue-on-error: true # To make sure that SARIF upload gets called
      env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
          args: --sarif-file-output=snyk.sarif
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
          sarif_file: snyk.sarif

#Dockerizing Spring Image 
          
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag spring_img:$(date +%s)

#Scanning the image using snyk
     
    - uses: actions/checkout@v3
    - name: Build a Docker image
      run: docker build -t spring_img .
    - name: Run Snyk to check Docker image for vulnerabilities
    
      continue-on-error: true
      uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
      env:
        
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: spring_img
        args: --file=Dockerfile
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
